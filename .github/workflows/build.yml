name: ðŸŽ‰ Build Binary
on:
  create:
    tags:
      - v*
  workflow_dispatch:
jobs:

  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
    #          - windows-latest
    steps:
      - name: Set up Go 1.17
        uses: actions/setup-go@v1
        with:
          go-version: 1.17
        id: go

      - name: Set up libpcap-dev
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get install libpcap-dev -y

      - name: Get version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: go mod download

      - name: Build
        run: |
          go build -o ./ksubdomain ./cmd/
#          tar -czvf ksubdomain-${{ steps.get_version.outputs.VERSION }}-${{ runner.os }}.tar.gz ksubdomain

      - name: Upload a build artifact
        uses: actions/upload-artifact@v2
        with:
          name: ksubdomain-${{ steps.get_version.outputs.VERSION }}-${{ runner.os }}_amd64
          path: ksubdomain
          if-no-files-found: error